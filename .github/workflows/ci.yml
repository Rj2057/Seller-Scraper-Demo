name: Product Scraper CI/CD Pipeline

# This workflow triggers on pushes and pull requests to the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # The first job is to build and test the application
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up the Python environment
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # Step 3: Install all necessary libraries from requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run the pytest tests and generate a report
      - name: Run tests with pytest
        run: pytest -q --maxfail=1 --junitxml=report.xml

      # Step 5: Upload the test report as an artifact
      - name: Upload pytest report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report
          path: report.xml

  # The second job is to deploy the application to Render
  deploy:
    # This job depends on the 'build' job and runs only if it succeeds
    needs: build
    runs-on: ubuntu-latest
    # This condition ensures deployment only happens on a push to the main branch
    if: github.ref == 'refs/heads/main'
    steps:
      # Step 1: Deploy the application to Render
      - name: Deploy to Render
        uses: hootsuite/render-deploy-action@v1.2.0
        with:
          # Your unique ID for the service you create on Render
          # This is stored securely in GitHub Secrets
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          # Your API key for Render
          # This is also stored securely in GitHub Secrets
          api-key: ${{ secrets.RENDER_API_KEY }}